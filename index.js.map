{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export const fetchImages = ({ query }) => {\n  return fetch(\n    `https://pixabay.com/api/?key=18172942-eab38dca32c93699ea5d62826&q=${encodeURI(\n      query\n    )}&image_type=photo&orientation=horizontal&safesearch=true`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(images => {\n      return images.hits.map(\n        ({\n          comments,\n          downloads,\n          likes,\n          views,\n          largeImageURL,\n          webformatURL,\n          tags,\n        }) => ({\n          comments,\n          downloads,\n          likes,\n          views,\n          largeImageURL,\n          webformatURL,\n          tags,\n        })\n      );\n    })\n    .catch(e => console.log(e));\n};\n","const getStatisticsItemMarkup = (name, count) => `\n        <li class=\"image-statistics-list-item\">\n            <h3>${name}</h3>\n            <p>${count}</p>\n          </li>\n        `;\n\nexport const createGalleryMarkup = images => {\n  return images\n    .map(\n      ({\n        comments,\n        downloads,\n        likes,\n        views,\n        largeImageURL,\n        webformatURL,\n        tags,\n      }) => `\n     <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n        </a>\n        <ul class=\"image-statistics-list\">\n            ${getStatisticsItemMarkup('Likes', likes)}\n            ${getStatisticsItemMarkup('Views', views)}\n            ${getStatisticsItemMarkup('Comments', comments)}\n            ${getStatisticsItemMarkup('Downloads', downloads)}\n        </ul>\n      </li>\n    `\n    )\n    .join('');\n};\n\nexport const renderMarkup = ({ ref, position = 'beforeEnd', markup }) => {\n  ref.insertAdjacentHTML(position, markup);\n};\n","import iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\n\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderMarkup, createGalleryMarkup } from './js/render-functions.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const refs = {\n    form: document.querySelector('.search-form'),\n    gallery: document.querySelector('.gallery'),\n    spinner: document.querySelector('.spinner'),\n  };\n\n  const toggleLoading = () => {\n    refs.gallery.classList.toggle('loading');\n    refs.spinner.classList.toggle('loading');\n  };\n\n  const showError = (\n    message = 'Sorry, there are no images matching your search query. Please try again!'\n  ) => {\n    iziToast.error({\n      message,\n      position: 'topRight',\n    });\n  };\n\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captions: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n\n  refs.form.addEventListener('submit', e => {\n    e.preventDefault();\n    const query = refs.form.query.value.trim();\n\n    if (!query) {\n      showError('Please enter a valid search query.');\n      return;\n    }\n\n    refs.gallery.innerHTML = '';\n    toggleLoading();\n\n    fetchImages({ query })\n      .then(images => {\n        if (images.length) {\n          renderMarkup({\n            ref: refs.gallery,\n            markup: createGalleryMarkup(images),\n          });\n\n          lightbox.refresh();\n        } else {\n          showError();\n        }\n\n        toggleLoading();\n      })\n      .catch(e => {\n        showError(\n          'An error occurred while fetching the images. Please try again later.'\n        );\n        toggleLoading();\n      });\n  });\n});\n"],"names":["fetchImages","query","response","images","comments","downloads","likes","views","largeImageURL","webformatURL","tags","e","getStatisticsItemMarkup","name","count","createGalleryMarkup","renderMarkup","ref","position","markup","refs","toggleLoading","showError","message","iziToast","lightbox","SimpleLightbox"],"mappings":"6vBAAO,MAAMA,EAAc,CAAC,CAAE,MAAAC,KACrB,MACL,qEAAqE,UACnEA,CACD,CAAA,0DACF,EACE,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GACGA,EAAO,KAAK,IACjB,CAAC,CACC,SAAAC,EACA,UAAAC,EACA,MAAAC,EACA,MAAAC,EACA,cAAAC,EACA,aAAAC,EACA,KAAAC,CACV,KAAe,CACL,SAAAN,EACA,UAAAC,EACA,MAAAC,EACA,MAAAC,EACA,cAAAC,EACA,aAAAC,EACA,KAAAC,CACV,EACA,CACK,EACA,MAAMC,GAAK,QAAQ,IAAIA,CAAC,CAAC,ECjCxBC,EAA0B,CAACC,EAAMC,IAAU;AAAA;AAAA,kBAE/BD,CAAI;AAAA,iBACLC,CAAK;AAAA;AAAA,UAITC,EAAsBZ,GAC1BA,EACJ,IACC,CAAC,CACC,SAAAC,EACA,UAAAC,EACA,MAAAC,EACA,MAAAC,EACA,cAAAC,EACA,aAAAC,EACA,KAAAC,CACR,IAAY;AAAA;AAAA,wCAE4BF,CAAa;AAAA,4CACTC,CAAY,UAAUC,CAAI;AAAA;AAAA;AAAA,cAGxDE,EAAwB,QAASN,CAAK,CAAC;AAAA,cACvCM,EAAwB,QAASL,CAAK,CAAC;AAAA,cACvCK,EAAwB,WAAYR,CAAQ,CAAC;AAAA,cAC7CQ,EAAwB,YAAaP,CAAS,CAAC;AAAA;AAAA;AAAA,KAIxD,EACA,KAAK,EAAE,EAGCW,EAAe,CAAC,CAAE,IAAAC,EAAK,SAAAC,EAAW,YAAa,OAAAC,CAAM,IAAO,CACvEF,EAAI,mBAAmBC,EAAUC,CAAM,CACzC,EC5BA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAO,CACX,KAAM,SAAS,cAAc,cAAc,EAC3C,QAAS,SAAS,cAAc,UAAU,EAC1C,QAAS,SAAS,cAAc,UAAU,CAC9C,EAEQC,EAAgB,IAAM,CAC1BD,EAAK,QAAQ,UAAU,OAAO,SAAS,EACvCA,EAAK,QAAQ,UAAU,OAAO,SAAS,CAC3C,EAEQE,EAAY,CAChBC,EAAU,6EACP,CACHC,EAAS,MAAM,CACb,QAAAD,EACA,SAAU,UAChB,CAAK,CACL,EAEQE,EAAW,IAAIC,EAAe,aAAc,CAChD,SAAU,GACV,aAAc,MACd,aAAc,GAClB,CAAG,EAEDN,EAAK,KAAK,iBAAiB,SAAU,GAAK,CACxC,EAAE,eAAc,EAChB,MAAMnB,EAAQmB,EAAK,KAAK,MAAM,MAAM,OAEpC,GAAI,CAACnB,EAAO,CACVqB,EAAU,oCAAoC,EAC9C,MACD,CAEDF,EAAK,QAAQ,UAAY,GACzBC,IAEArB,EAAY,CAAE,MAAAC,EAAO,EAClB,KAAKE,GAAU,CACVA,EAAO,QACTa,EAAa,CACX,IAAKI,EAAK,QACV,OAAQL,EAAoBZ,CAAM,CAC9C,CAAW,EAEDsB,EAAS,QAAO,GAEhBH,IAGFD,GACR,CAAO,EACA,MAAMV,GAAK,CACVW,EACE,sEACV,EACQD,GACR,CAAO,CACP,CAAG,CACH,CAAC"}